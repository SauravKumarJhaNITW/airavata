/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3";

option java_multiple_files = true;
package org.apache.airavata.api.notification;

import "auth/auth_stubs.proto";
import "notification/notification_stubs.proto";

message CreateNotificationRequest {
  org.apache.airavata.api.auth.stubs.AuthzToken authzToken = 1;
  org.apache.airavata.api.notification.stubs.Notification notification = 3;
}

message CreateNotificationResponse {
  string response = 1;
}

message UpdateNotificationRequest {
  org.apache.airavata.api.auth.stubs.AuthzToken authzToken = 1;
  org.apache.airavata.api.notification.stubs.Notification notification = 3;
}

message UpdateNotificationResponse {
  bool updated = 1;
}

message DeleteNotificationRequest {
  org.apache.airavata.api.auth.stubs.AuthzToken authzToken = 1;
  string gatewayId = 2;
  string notificationId = 3;
}

message DeleteNotificationResponse {
  bool updated = 1;
}

message GetNotificationRequest {
  org.apache.airavata.api.auth.stubs.AuthzToken authzToken = 1;
  string gatewayId = 2;
  string notificationId = 3;
}

message GetNotificationResponse {
  org.apache.airavata.api.notification.stubs.Notification notification = 1;
}

message GetAllNotificationsRequest {
  org.apache.airavata.api.auth.stubs.AuthzToken authzToken = 1;
  string gatewayId = 2;
}

message GetAllNotificationsResponse {
  repeated org.apache.airavata.api.notification.stubs.Notification notification = 1;
}

service NotificationService {
  rpc createNotification(CreateNotificationRequest) returns (CreateNotificationResponse);
  rpc updateNotification(UpdateNotificationRequest) returns (UpdateNotificationResponse);
  rpc deleteNotification(DeleteNotificationRequest) returns (DeleteNotificationResponse);
  rpc getNotification(GetNotificationRequest) returns (GetNotificationResponse);
  rpc getAllNotifications(GetAllNotificationsRequest) returns (GetAllNotificationsResponse);
}